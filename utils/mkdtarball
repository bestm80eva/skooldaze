#!/usr/bin/env bash

# Abort on any error
set -e

usage() {
  cat <<EOF
Usage: $(basename $0) [options]

  Create a release tarball and zip archive of the disassembly.

Options:
  -h  Show this help
EOF
  exit 1
}

readme() {
  cat <<EOF
The HTML disassembly in this archive was built from the source files in the
'sources' subdirectory using version $SK_VERSION of SkoolKit.

SkoolKit can be obtained from the following locations:

  - http://skoolkit.ca/
  - https://launchpad.net/skoolkit

The HTML disassembly can be built from the source files by following these
steps:

1. Download and unpack SkoolKit $SK_VERSION.

2. Copy every file from the 'sources' subdirectory in this archive to the
   directory where SkoolKit was unpacked.

3. Change to the directory where SkoolKit was unpacked and run this command:

   $ ./skool2html.py sd.ref
EOF
}

asm_header() {
  cat <<EOF
An ASM version of the disassembly in this archive can be built from the source
files in the 'sources' subdirectory using version $SK_VERSION of SkoolKit.

SkoolKit can be obtained from the following locations:

  - http://skoolkit.ca/
  - https://launchpad.net/skoolkit

The ASM disassembly can be built by following these steps:

1. Download and unpack SkoolKit $SK_VERSION.

2. Copy 'sd.skool' from the 'sources' subdirectory in this archive to the
   directory where SkoolKit was unpacked.

3. Change to the directory where SkoolKit was unpacked and run this command:

  $ ./skool2asm.py sd.skool > sd.asm

Now sd.asm can be assembled using pasmo (http://pasmo.speccy.org/):

  $ pasmo sd.asm sd.bin

To create a TAP file from sd.bin, use the bin2tap.py utility, included with
SkoolKit:

  $ ./bin2tap.py sd.bin

The resultant TAP file, sd.tap, can be loaded into an emulator, and the game
will start automatically.
EOF
}

copying() {
  cat <<EOF
The SkoolKit extension modules (microsphere.py and skooldaze.py) are licensed
under the GNU General Public License, version 3. To view a copy of this
licence, visit

  http://www.gnu.org/licenses/

The text of the disassembly itself (annotations, the contents of the Trivia,
Bugs and Pokes pages etc.) is licensed under the Creative Commons
Attribution-ShareAlike 3.0 Unported License. To view a copy of this licence,
visit

  http://creativecommons.org/licenses/by-sa/3.0/
EOF
}

while [[ -n $1 ]]; do
  case "$1" in
    -*) usage ;;
  esac
  shift
done

if [[ -z $SKOOLDAZE_HOME ]]; then
  echo "Error: SKOOLDAZE_HOME not defined."
  exit 1
fi
if [[ ! -d $SKOOLDAZE_HOME ]]; then
  echo "Error: directory not found: $SKOOLDAZE_HOME"
  exit 1
fi

# Determine the SkoolKit version number
if [[ ! -f skool2html.py ]]; then
  echo "Error: skool2html.py not found."
  exit 1
fi
SK_VERSION=$(./skool2html.py -V 2>&1 | cut -f2 -d' ')

# Determine the disassembly version number
VERSION=$(grep ^Release= $SKOOLDAZE_HOME/sources/sd.ref | awk '{print $NF}' || true)
if [[ -z $VERSION ]]; then
  echo "Error: could not find version number in sd.ref"
  exit 1
fi

# Copy all files required to build the disassembly into the 'src' directory
rm -rf src
cp -a $SKOOLDAZE_HOME/sources src
cp -p $SKOOLDAZE_HOME/skoolkit/{microsphere,skooldaze}.py src
cp -p $SKOOLDAZE_HOME/resources/* src

DISTDIR=dist
PKGNAME=sd-disassembly-$VERSION
ABSDIR=${DISTDIR}/${PKGNAME}
rm -rf $ABSDIR

# Build the HTML disassembly
echo -n "Writing disassembly..."
cd src
../skool2html.py -q -S ../resources -d ../${ABSDIR} sd.ref
cd ..
mv ${ABSDIR}/{skool_daze,html}
echo "done"

# Copy source files
echo -n "Copying source files and SkoolKit modules..."
rm -f src/*.pyc
cp -a src ${ABSDIR}/sources
copying > ${ABSDIR}/sources/COPYING
readme > ${ABSDIR}/readme.txt
asm_header > ${ABSDIR}/asm.txt
echo "done"

cd $DISTDIR

echo "Creating ${DISTDIR}/${PKGNAME}.tar.xz"
tar acf ${PKGNAME}.tar.xz $PKGNAME

echo "Creating ${DISTDIR}/${PKGNAME}.zip"
zip -9qr ${PKGNAME}.zip $PKGNAME
